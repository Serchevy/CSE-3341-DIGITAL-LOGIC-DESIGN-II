// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/16/2024 00:25:44"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Lab4_part2
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Lab4_part2_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLEAR;
reg CLK;
reg IN;
reg [7:0] Min;
reg Out;
reg [7:0] Qin;
reg inM;
reg inQ;
// wires                                               
wire [3:0] CAT;
wire H;
wire [0:6] HEX;
wire [0:13] Mout;
wire [15:0] Pout;
wire [0:13] Qout;

// assign statements (if any)                          
Lab4_part2 i1 (
// port map - connection between master ports and signals/registers   
	.CAT(CAT),
	.CLEAR(CLEAR),
	.CLK(CLK),
	.H(H),
	.HEX(HEX),
	.IN(IN),
	.Min(Min),
	.Mout(Mout),
	.Out(Out),
	.Pout(Pout),
	.Qin(Qin),
	.Qout(Qout),
	.inM(inM),
	.inQ(inQ)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
initial
begin
	CLK = 1'b1;
end 
endmodule

